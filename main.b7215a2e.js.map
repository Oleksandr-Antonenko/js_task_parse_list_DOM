{"version":3,"sources":["scripts/main.js"],"names":["normalize","str","Number","replace","userList","document","querySelectorAll","sortList","list","parentNode","append","sort","a","b","dataset","salary","getEmployees","map","user","name","textContent","trim"],"mappings":";AAAA,aAqBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnBA,IAAMA,EAAY,SAAAC,GAAOC,OAAAA,OAAOD,EAAIE,QAAQ,QAAS,MAC/CC,EAAeC,EAAAA,SAASC,iBAAiB,OAE/C,SAASC,EAASC,GAAM,IAAA,GACtBA,EAAAA,EAAK,GAAGC,YAAWC,OAAUF,MAAAA,EAAAA,EAAAA,EAAKG,KAAK,SAACC,EAAGC,GAClCb,OAAAA,EAAUa,EAAEC,QAAQC,QAAUf,EAAUY,EAAEE,QAAQC,YAI7D,SAASC,EAAaR,GACbA,OAAAA,EAAKS,IAAI,SAAAC,GACd,OAAA,EAAA,CACEC,KAAMD,EAAKE,YAAYC,QACpBH,EAAKJ,WAKdP,EAASH,GACTY,EAAaZ","file":"main.b7215a2e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst normalize = str => Number(str.replace(/[$,]/g, ''));\nconst userList = [...document.querySelectorAll('li')];\n\nfunction sortList(list) {\n  list[0].parentNode.append(...list.sort((a, b) => {\n    return normalize(b.dataset.salary) - normalize(a.dataset.salary);\n  }));\n}\n\nfunction getEmployees(list) {\n  return list.map(user => {\n    return {\n      name: user.textContent.trim(),\n      ...user.dataset,\n    };\n  });\n}\n\nsortList(userList);\ngetEmployees(userList);\n"]}